from os import system

Import('env')

GraphicsWidgets = [ 
    'window', 'toolbar', 'textbox', 'button', 'canvas', 'splitter', 'container',
    'checkbox', 'dialog', 'label', 'progress', 'radio', 'statusbar',
    'textarea', 'frame', 'image', 'list', 'listbox', 'listview', 'combo', 'menubar',
    'menu', 'scrollbar', 'workspace', 'opengl', 'treeview','stock'
]

LayoutSources = [ "layout/layout_parser.c", "layout/layout.c","layout/layout_heap.c" ]
GraphicsSources = [ "widget.c", "graphics.c", "image.c", "font.c", "system.c" ] + LayoutSources
WidgetHeaders = []

for w in GraphicsWidgets:
	GraphicsSources.append( 'widgets/' + w + '.c' )
        WidgetHeaders.append('widgets/' + w + '.h')

if WhereIs('ragel') != None:
	env['BUILDERS']['Ragel'] = Builder(action="ragel -G2 $SOURCES -o $TARGET")
	env.Ragel(target="layout/layout_parser.c", source=["layout/layout_parser.rl"])

if env['PLATFORM']  == "posix":
	GraphicsSources += ["platform/gtk.c", "platform/gdkcairo.c", "platform/gtkcairo.c"]
	GraphicsSources += [
		"platform/gtk/window.c",
		"platform/gtk/toolbar.c",
		"platform/gtk/textbox.c",
		"platform/gtk/button.c",
		"platform/gtk/canvas.c",
		"platform/gtk/splitter.c",
		"platform/gtk/container.c",
		"platform/gtk/label.c",
		"platform/gtk/statusbar.c",
		"platform/gtk/progressbar.c",
		"platform/gtk/checkbox.c",
		"platform/gtk/radio.c",
		"platform/gtk/textarea.c",
		"platform/gtk/frame.c",
		"platform/gtk/image.c",
		"platform/gtk/listview.c",
		"platform/gtk/listbox.c",
		"platform/gtk/combo.c",
		"platform/gtk/menubar.c",
		"platform/gtk/menu.c",
		"platform/gtk/scrollbar.c",
		"platform/gtk/workspace.c",
		"platform/gtk/opengl.c",
		"platform/gtk/treeview.c",
		
		"platform/gtk/font.c",
		"platform/gtk/images.c",
		"platform/gtk/system.c",
	]
elif env['PLATFORM'] == "win32":
	GraphicsSources += [
		"platform/win32.c",
		"platform/win32/window.c",
		"platform/win32/toolbar.c",
		"platform/win32/textbox.c",
		"platform/win32/button.c",
		"platform/win32/canvas.c",
		"platform/win32/splitter.c",
		"platform/win32/container.c",
		"platform/win32/label.c",
		"platform/win32/statusbar.c",
		"platform/win32/progressbar.c",
		"platform/win32/checkbox.c",
		"platform/win32/radio.c",
		"platform/win32/textarea.c",
		"platform/win32/frame.c",
		"platform/win32/image.c",
		"platform/win32/listbox.c",
		"platform/win32/listview.c",
		"platform/win32/combo.c",
		"platform/win32/menubar.c",
		"platform/win32/menu.c",
		"platform/win32/scrollbar.c",
		"platform/win32/workspace.c",
		"platform/win32/opengl.c",
		"platform/win32/treeview.c",
		
		"platform/win32/pngdib/pngdib.c",
		"platform/win32/font.c",
		"platform/win32/images.c",
		"platform/win32/system.c",
	]
elif env['PLATFORM'] == "darwin":
	GraphicsSources += [
		"platform/macosx_cocoa.m",
		"platform/cocoa/window.m",
		"platform/cocoa/toolbar.m",
		"platform/cocoa/textbox.m",
		"platform/cocoa/button.m",
		"platform/cocoa/canvas.m",
		"platform/cocoa/splitter.m",
		"platform/cocoa/container.m",
		"platform/cocoa/label.m",
		"platform/cocoa/statusbar.m",
		"platform/cocoa/progressbar.m",
		"platform/cocoa/checkbox.m",
		"platform/cocoa/radio.m",
		"platform/cocoa/textarea.m",
		"platform/cocoa/frame.m",
		"platform/cocoa/image.m",
		"platform/cocoa/listview.m",
		"platform/cocoa/listbox.m",
		"platform/cocoa/combo.m",
		"platform/cocoa/menubar.m",
		"platform/cocoa/menu.m",
		"platform/cocoa/scrollbar.m",
		"platform/cocoa/workspace.m",
		"platform/cocoa/opengl.m",
		"platform/cocoa/treeview.m",
		
		"platform/cocoa/font.m",
		"platform/cocoa/images.m",
		"platform/cocoa/system.m",
		
		"platform/cocoa/RBSplitView/RBSplitView.m",
		"platform/cocoa/RBSplitView/RBSplitSubview.m",
	]
else:
	print "Your platform '%s' is not supported." % (env['PLATFORM'])
	Exit(1)

prefix = "#build/" + env['SHLIBPREFIX']
extras = []

if env['PLATFORM'] != 'win32':
	StaticLibrary(prefix + "claro-graphics", GraphicsSources)
else:
	extras = ['gdi32','comctl32','ole32','msvcp60','Msimg32','png','z']
	if env.opengl:
		extras.append( 'opengl32' )
		extras.append( 'glu32' )

if env.no_cairo == 0:
	extras.append( 'cairo' )


Install("/usr/local/lib", [prefix + "claro-graphics.a", prefix + "claro-graphics" + env['SHLIBSUFFIX']])
Install("/usr/local/include/claro", ["graphics.h"])
Install("/usr/local/include/claro/graphics", ["widget.h"])
Install("/usr/local/include/claro/graphics/layout", ["layout/layout.h"])
Install("/usr/local/include/claro/graphics/widgets", WidgetHeaders)
SharedLibrary(prefix + "claro-graphics", GraphicsSources, LIBS=["claro-base"] + extras)
        
Alias("libraries", [
    prefix + "claro-graphics" + env['SHLIBSUFFIX'],
    ])
